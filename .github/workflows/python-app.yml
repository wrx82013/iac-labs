name: Python CI Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4

      - name: Cache Poetry Dependencies
        id: poetry-cache
        uses: actions/cache@v3
        with:
          path: /home/runner/work/<path>/example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install Project Dependencies
        run: |
          poetry install --no-root

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/<path>/example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Run Linter
        run: |
          poetry run task lint

  formatter:
    name: Formatter
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/<path>/example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Run Formatter
        run: |
          poetry run task formatter

  security:
    name: Security
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/<path>/example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Run Security Checks
        run: |
          poetry run task security

  unittests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [lint, formatter, security]
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/<path>/example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Run Unit Tests
        run: |
          poetry run task test
